{
  
    
        "post0": {
            "title": "Coronavirus Latest",
            "content": "Overview . 2,623,413 Total cases reported worldwide, April 22, 2020 74,120New cases reported since last day709,694 +29,875 (27.05%)Total recovered reported worldwide183,025 +6,443 (6.98%)Total deaths reported worldwide184Total number of countries tracked Confirmed Cases . Weight of Cases by Countries . Country Total New New_Mean_7D Change Change_Mean_7D Trending Weight . 0 US | 46583 | 2139.0 | 2606.0 | 0.0481 | 0.0744 | -0.0263 | 0.3320 | . 1 United Kingdom | 18151 | 773.0 | 751.0 | 0.0445 | 0.0501 | -0.0057 | 0.1200 | . 2 France | 21373 | 544.0 | 598.0 | 0.0261 | 0.0317 | -0.0055 | 0.0844 | . 3 Italy | 25085 | 437.0 | 491.0 | 0.0177 | 0.0213 | -0.0036 | 0.0678 | . 4 Spain | 21717 | 435.0 | 430.0 | 0.0204 | 0.0216 | -0.0011 | 0.0675 | . 5 Belgium | 6262 | 264.0 | 260.0 | 0.0440 | 0.0506 | -0.0066 | 0.0410 | . 6 Germany | 5279 | 246.0 | 211.0 | 0.0489 | 0.0481 | 0.0008 | 0.0382 | . 7 Sweden | 1937 | 172.0 | 105.0 | 0.0975 | 0.0710 | 0.0264 | 0.0267 | . 8 Canada | 2075 | 167.0 | 153.0 | 0.0875 | 0.1106 | -0.0231 | 0.0259 | . 9 Brazil | 2906 | 165.0 | 167.0 | 0.0602 | 0.0767 | -0.0165 | 0.0256 | . 10 Mexico | 857 | 145.0 | 64.0 | 0.2037 | 0.1142 | 0.0895 | 0.0225 | . 11 Netherlands | 4068 | 139.0 | 132.0 | 0.0354 | 0.0375 | -0.0021 | 0.0216 | . 12 Turkey | 2376 | 117.0 | 123.0 | 0.0518 | 0.0661 | -0.0144 | 0.0182 | . 13 Iran | 5391 | 94.0 | 88.0 | 0.0177 | 0.0174 | 0.0003 | 0.0146 | . 14 Russia | 513 | 57.0 | 45.0 | 0.1250 | 0.1459 | -0.0209 | 0.0088 | . 15 Peru | 530 | 46.0 | 39.0 | 0.0950 | 0.1112 | -0.0161 | 0.0071 | . 16 Ireland | 769 | 39.0 | 46.0 | 0.0534 | 0.0819 | -0.0284 | 0.0061 | . 17 India | 681 | 36.0 | 39.0 | 0.0558 | 0.0772 | -0.0214 | 0.0056 | . 18 Switzerland | 1509 | 31.0 | 39.0 | 0.0210 | 0.0286 | -0.0076 | 0.0048 | . 19 Romania | 524 | 26.0 | 22.0 | 0.0522 | 0.0502 | 0.0020 | 0.0040 | . 20 Poland | 426 | 25.0 | 20.0 | 0.0623 | 0.0587 | 0.0036 | 0.0039 | . 21 Portugal | 785 | 23.0 | 27.0 | 0.0302 | 0.0394 | -0.0092 | 0.0036 | . 22 Indonesia | 635 | 19.0 | 24.0 | 0.0308 | 0.0445 | -0.0136 | 0.0029 | . 23 Austria | 510 | 19.0 | 17.0 | 0.0387 | 0.0380 | 0.0007 | 0.0029 | . 24 Japan | 281 | 18.0 | 19.0 | 0.0684 | 0.1001 | -0.0317 | 0.0028 | . 25 Ecuador | 537 | 17.0 | 21.0 | 0.0327 | 0.0477 | -0.0150 | 0.0026 | . 26 Dominican Republic | 260 | 15.0 | 10.0 | 0.0612 | 0.0468 | 0.0144 | 0.0023 | . 27 Denmark | 384 | 14.0 | 11.0 | 0.0378 | 0.0316 | 0.0063 | 0.0022 | . 28 Ukraine | 174 | 13.0 | 9.0 | 0.0807 | 0.0705 | 0.0102 | 0.0020 | . 29 Chile | 160 | 13.0 | 9.0 | 0.0884 | 0.0792 | 0.0092 | 0.0020 | . 30 Egypt | 276 | 12.0 | 13.0 | 0.0455 | 0.0606 | -0.0151 | 0.0019 | . 31 Hungary | 225 | 12.0 | 13.0 | 0.0563 | 0.0770 | -0.0207 | 0.0019 | . 32 Pakistan | 212 | 11.0 | 14.0 | 0.0547 | 0.0980 | -0.0433 | 0.0017 | . Cases in US . Deaths Cases Global .",
            "url": "https://covid19.holamedia.my/covid-overview/",
            "relUrl": "/covid-overview/",
            "date": " • Apr 16, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Cases in Malaysia",
            "content": "#@title Load data and define plot functions #hide import pandas as pd import numpy as np import altair as alt import ipywidgets as widgets #from jinja2 import Template from IPython.display import HTML #hide # COVID-19 Data from https://github.com/CSSEGISandData/COVID-19/tree/master/csse_covid_19_data/csse_covid_19_time_series base_url = &#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data&#39; # confirmed, deaths, recovered def get_time_series(type): _url = f&#39;{base_url}/csse_covid_19_time_series/time_series_covid19_{type}_global.csv&#39; _dff = pd.read_csv(_url) _cols = _dff.columns[~_dff.columns.isin([&#39;Province/State&#39;, &#39;Country/Region&#39;, &#39;Lat&#39;, &#39;Long&#39;])] _dff = (_dff.groupby(&#39;Country/Region&#39;)[_cols].sum().stack().reset_index(name = &#39;Cases&#39;) .rename(columns = {&#39;level_1&#39;: &#39;Date&#39;, &#39;Country/Region&#39;: &#39;Country&#39;})) _dff[&#39;Date&#39;] = pd.to_datetime(_dff[&#39;Date&#39;], format=&#39;%m/%d/%y&#39;) return _dff # eg. 03-27-2020 def get_df_daily(date): _url = f&#39;{base_url}/csse_covid_19_daily_reports/{date}.csv&#39; return pd.read_csv(_url) df_confirmed = get_time_series(&#39;confirmed&#39;) df_recovered = get_time_series(&#39;recovered&#39;) df_deaths = get_time_series(&#39;deaths&#39;) date_latest = df_confirmed[&#39;Date&#39;].max() def countries_cases(df, n=5000, date_as_of=date_latest): df_latest = df[df[&#39;Date&#39;].eq(date_as_of)] df_latest_n = df_latest[df_latest[&#39;Cases&#39;] &gt; n] return df_latest_n # Last n days of type e.g. confirmed, recovered, deaths df_last = lambda name, _df, n: _df[_df[&#39;Date&#39;].isin(_df[&#39;Date&#39;].tail(n))].set_index([&#39;Country&#39;, &#39;Date&#39;]).rename(columns={&#39;Cases&#39;: name}) # Last 2 days all global df_summary = lambda last_n: pd.concat([df_last(&#39;Confirmed&#39;, df_confirmed, last_n), df_last(&#39;Deaths&#39;, df_deaths, last_n), df_last(&#39;Recovered&#39;, df_recovered, last_n)], axis=1) df_global = df_summary(2).groupby([&#39;Date&#39;]).sum().reset_index() df_global_summary = df_global.stack().reset_index().rename(columns={&#39;level_1&#39;: &#39;Type&#39;, 0: &#39;Cases&#39;}) #print(date_latest) s_date_latest = date_latest.strftime(&quot;%B %d, %Y&quot;) #.strftime(&#39;%m/%d/%Y&#39;) n_confirmed = df_global.loc[1][&#39;Confirmed&#39;] n_deaths = df_global.loc[1][&#39;Deaths&#39;] n_recovered = df_global.loc[1][&#39;Recovered&#39;] df_global_diff = df_global.diff() n_confirmed_diff = df_global_diff.loc[1][&#39;Confirmed&#39;] n_deaths_diff = df_global_diff.loc[1][&#39;Deaths&#39;] n_recovered_diff = df_global_diff.loc[1][&#39;Recovered&#39;] weekDays = (&quot;Monday&quot;,&quot;Tuesday&quot;,&quot;Wednesday&quot;,&quot;Thursday&quot;,&quot;Friday&quot;,&quot;Saturday&quot;,&quot;Sunday&quot;) df_my = lambda _df: _df[_df[&#39;Country&#39;] == &#39;Malaysia&#39;][[&#39;Date&#39;, &#39;Cases&#39;]] df_confirmed_my = df_my(df_confirmed).rename(columns={&#39;Cases&#39;: &#39;Cummulative Cases&#39;, &#39;Date&#39;: &#39;Reported Date&#39;}) df_summary_my = df_summary(2).loc[&#39;Malaysia&#39;].reset_index(drop=True) n_confirmed_my = df_summary_my.loc[1][&#39;Confirmed&#39;] n_deaths_my = df_summary_my.loc[1][&#39;Deaths&#39;] n_recovered_my = df_summary_my.loc[1][&#39;Recovered&#39;] df_summary_my_diff = df_summary_my.diff() n_confirmed_my_diff = df_summary_my_diff.loc[1][&#39;Confirmed&#39;] n_deaths_my_diff = df_summary_my_diff.loc[1][&#39;Deaths&#39;] n_recovered_my_diff = df_summary_my_diff.loc[1][&#39;Recovered&#39;] def make_pkp_line(date, label, max): _df = pd.DataFrame({&#39;Date&#39;: [date, date], &#39;Cases&#39;: [0, max]}) _base_ref = alt.Chart(_df).encode(x=&#39;Date:T&#39;, y=&#39;Cases:Q&#39;) return (_base_ref.mark_line(color=&#39;black&#39;, opacity=.5, strokeDash=[3,3]) + _base_ref.transform_filter(alt.datum[&#39;Cases&#39;] &gt; 0).mark_text(text=label, dx=-20, dy=-10, angle=270)) def make_pkp_line_by_case(case, label, max): _df = pd.DataFrame({&#39;Cummulative Cases&#39;: [case, case], &#39;Cases&#39;: [0.1, max]}) _base_ref = alt.Chart(_df).encode(x=&#39;Cummulative Cases:Q&#39;, y=&#39;Cases:Q&#39;) return (_base_ref.mark_line(color=&#39;black&#39;, opacity=.5, strokeDash=[3,3]) + _base_ref.transform_filter(alt.datum[&#39;Cases&#39;] &gt; 1).mark_text(text=label, dx=-20, dy=-10, angle=270)) _pkp_line = lambda n: make_pkp_line(&#39;2020-03-18&#39;, &#39;PKP1&#39;, n) + make_pkp_line(&#39;2020-04-01&#39;, &#39;PKP2&#39;, n) + make_pkp_line(&#39;2020-04-15&#39;, &#39;PKP3&#39;, n) print(&#39;Data loaded and plot functions defined.&#39;) . Data loaded and plot functions defined. . COVID-19: Malaysia at a Glance . as of April 27, 2020 12PMConfirmed Cases5,820 . (+40)Deaths99 . 1.70% (+1)Recovered3,957 . 67.99% (+95) Is the curve is flatterning in Malaysia? . Inflection-sensitive chart for detecting successful interventions, from the article &quot;How To Tell If We&#39;re Beating COVID-19&quot;. Please refer minutephysics for How To Tell If We&#39;re Beating COVID-19 .",
            "url": "https://covid19.holamedia.my/covid-my-overview/",
            "relUrl": "/covid-my-overview/",
            "date": " • Apr 7, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://covid19.holamedia.my/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

}